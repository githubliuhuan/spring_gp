<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <!--导入外部的参数文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--连接池-->
    <bean class="org.apache.commons.dbcp.BasicDataSource" id="dbcp04" destroy-method="close">
        <property name="username" value="root"/>
        <property name="password" value="root"/>
        <property name="url" value="jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC"/>
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <!--详细参数-->
        <!--连接池的最大连接对象 数量-->
        <property name="maxActive" value="3"></property>
        <!--最少要空闲1个连接对象-->
        <property name="minIdle" value="1"></property>
        <!--初始化连接池 要创建一个连接对象-->
        <property name="initialSize" value="1"></property>
        <!--当向连接池索要连接池时，如果没有空闲连接，最大等待的时长：毫秒-->
        <property name="maxWait" value="3000"></property>
    </bean>

    <bean id="c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="user" value="root"/>
        <property name="password" value="root"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC"/>
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <!--详细参数-->
        <!--连接池的最大连接对象 数量-->
        <property name="maxPoolSize" value="3"></property>
        <!--最少连接数-->
        <property name="minPoolSize" value="1"></property>
        <!--初始化连接池 要创建一个连接对象-->
        <property name="initialPoolSize" value="1"></property>
        <!--当向连接池索要连接池时，如果没有空闲连接，最大等待的时长：毫秒-->
        <property name="checkoutTimeout" value="3000"></property>
    </bean>

    <!--连接池：druid-->
    <bean id="druid" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--基本属性-->
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <!--配置初始化大小 最小 最大-->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="${jdbc.maxPoolSize}"/>
        <!--配置获取连接等待超时的时间-->
        <property name="maxWait" value="3000"/>
        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!--配置一个连接在池中最小空闲的时间，单位是毫秒-->
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        
        <property name="validationQuery" value="select 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
    </bean>
    
    <!--SqlSessionFactory
    配置：1.连接池
         2.mapper文件
         3.别名-可选
         4.插件-可选-->
    <bean id="sqlSessionFactory04" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--<property name="configLocation" value="classpath:configuration.xml"/>-->
        <property name="dataSource" ref="druid"/>
        <!--mapper文件
            如果和dao接口在同包且同名，则如下注入可以省略
            -->
<!--
        <property name="mapperLocations" value="classpath:com/qianfeng/dao/*.xml"/>
-->
        <!--别名-->
        <property name="typeAliasesPackage" value="com.qianfeng.pojo"/>
        <!--插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="reasonable">true</prop>
                        </props>
                       <!-- <value>
                            reasonable=true
                        </value>-->
                    </property>
                </bean>
            </array>
        </property>
    </bean>


    <!--扫描所有mapper,为每个dao定制实现类 sqlSession.getMapper(UserDAO.class)
        DAO实现的对象纳入工厂，并且beanID=DAO的首字母小写接口类名="userDAO"
        1> DAO接口
        2> DAO映射文件
        3> SqlSession
        -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!--如果当前工厂中，只有一个SqlSessionFactory，则此项注入可以省略-->
<!--
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory04"/>
-->
    <!--DAO接口位置-->
    <!--<property name="basePackage" value="com.qianfeng.dao,com.qianfeng2.dao2"/>-->
    <property name="basePackage" value="com.qianfeng.dao"/>
</bean>



    <!--事务管理-->
    <!--事务管理器-->
    <bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druid"/>
    </bean>

    <!--配置注解扫描-->
    <context:component-scan base-package="com.qianfeng"/>
    <!--支持@Transactional 实现事务-->
    <tx:annotation-driven transaction-manager="tx"/>

    <aop:aspectj-autoproxy/>
</beans>